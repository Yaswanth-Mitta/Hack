# This workflow automates the entire CI/CD pipeline for your project.
# It builds and pushes Docker images for both the backend and frontend,
# and then applies the Kubernetes manifest files in the correct sequence.
# This version is configured to run on a self-hosted runner and
# triggers on any push to the 'main' branch.

name: CI/CD Pipeline for Hack Project

on:
  push:
    branches:
      - main

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  # Using the commit SHA as a unique image tag
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-push-and-deploy:
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 1: Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 2: Build and push the Backend Docker image
      - name: Build and push Backend image
        run: |
          sudo docker build -t ${{ env.DOCKER_USERNAME }}/backend:${{ env.IMAGE_TAG }} ./backend
          sudo docker tag ${{ env.DOCKER_USERNAME }}/backend:${{ env.IMAGE_TAG }} ${{ env.DOCKER_USERNAME }}/backend:latest
          sudo docker push ${{ env.DOCKER_USERNAME }}/backend:${{ env.IMAGE_TAG }}
          sudo docker push ${{ env.DOCKER_USERNAME }}/backend:latest

      # Step 3: Build and push the Frontend Docker image
      - name: Build and push Frontend image
        run: |
          sudo docker build -t ${{ env.DOCKER_USERNAME }}/frontend:${{ env.IMAGE_TAG }} ./frontend
          sudo docker tag ${{ env.DOCKER_USERNAME }}/frontend:${{ env.IMAGE_TAG }} ${{ env.DOCKER_USERNAME }}/frontend:latest
          sudo docker push ${{ env.DOCKER_USERNAME }}/frontend:${{ env.IMAGE_TAG }}
          sudo docker push ${{ env.DOCKER_USERNAME }}/frontend:latest

      # Step 4: Deploy to Kubernetes in the specified order
      - name: Deploy to Kubernetes
        run: |
          echo "Applying mongo-deployment.yaml"
          sudo kubectl apply -f k8s/mongo-deployment.yaml
          
          echo "Applying backend-deployment.yaml"
          sudo kubectl apply -f k8s/backend-deployment.yaml
          
          echo "Applying frontend-deployment.yaml"
          sudo kubectl apply -f k8s/frontend-deployment.yaml

